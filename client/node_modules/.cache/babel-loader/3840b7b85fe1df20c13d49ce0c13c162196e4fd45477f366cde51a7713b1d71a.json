{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DEEPESH\\\\Downloads\\\\vendohr-main\\\\vendohr-main\\\\client\\\\src\\\\components\\\\jobs\\\\JobList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getJobs } from '../../actions/job';\nimport JobItem from './JobItem';\nimport JobSearchFilter from './JobSearchFilter';\nimport Spinner from '../layout/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobList = ({\n  getJobs,\n  job: {\n    jobs,\n    loading\n  }\n}) => {\n  _s();\n  const [filteredJobs, setFilteredJobs] = useState([]);\n  useEffect(() => {\n    getJobs();\n  }, [getJobs]);\n  useEffect(() => {\n    setFilteredJobs(jobs);\n  }, [jobs]);\n  const onFilter = filters => {\n    let filtered = jobs;\n    if (filters.title) {\n      filtered = filtered.filter(job => job.title.toLowerCase().includes(filters.title.toLowerCase()));\n    }\n    if (filters.location) {\n      filtered = filtered.filter(job => job.location.toLowerCase().includes(filters.location.toLowerCase()));\n    }\n    if (filters.salary) {\n      filtered = filtered.filter(job => parseInt(job.salary) >= parseInt(filters.salary));\n    }\n    setFilteredJobs(filtered);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"large text-primary\",\n      children: \"Jobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-briefcase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), \" Browse and find a job\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(JobSearchFilter, {\n      onFilter: onFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jobs\",\n      children: filteredJobs.map(job => /*#__PURE__*/_jsxDEV(JobItem, {\n        job: job\n      }, job._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(JobList, \"Wi4zfaGsTSGY3I6gmRp8wz1aq80=\");\n_c = JobList;\nJobList.propTypes = {\n  getJobs: PropTypes.func.isRequired,\n  job: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  job: state.job\n});\nexport default connect(mapStateToProps, {\n  getJobs\n})(JobList);\nvar _c;\n$RefreshReg$(_c, \"JobList\");","map":{"version":3,"names":["React","useEffect","useState","connect","PropTypes","getJobs","JobItem","JobSearchFilter","Spinner","jsxDEV","_jsxDEV","JobList","job","jobs","loading","_s","filteredJobs","setFilteredJobs","onFilter","filters","filtered","title","filter","toLowerCase","includes","location","salary","parseInt","fileName","_jsxFileName","lineNumber","columnNumber","className","children","map","_id","_c","propTypes","func","isRequired","object","mapStateToProps","state","$RefreshReg$"],"sources":["C:/Users/DEEPESH/Downloads/vendohr-main/vendohr-main/client/src/components/jobs/JobList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getJobs } from '../../actions/job';\nimport JobItem from './JobItem';\nimport JobSearchFilter from './JobSearchFilter';\nimport Spinner from '../layout/Spinner';\n\nconst JobList = ({ getJobs, job: { jobs, loading } }) => {\n  const [filteredJobs, setFilteredJobs] = useState([]);\n\n  useEffect(() => {\n    getJobs();\n  }, [getJobs]);\n\n  useEffect(() => {\n    setFilteredJobs(jobs);\n  }, [jobs]);\n\n  const onFilter = (filters) => {\n    let filtered = jobs;\n    if (filters.title) {\n      filtered = filtered.filter(job => job.title.toLowerCase().includes(filters.title.toLowerCase()));\n    }\n    if (filters.location) {\n      filtered = filtered.filter(job => job.location.toLowerCase().includes(filters.location.toLowerCase()));\n    }\n    if (filters.salary) {\n      filtered = filtered.filter(job => parseInt(job.salary) >= parseInt(filters.salary));\n    }\n    setFilteredJobs(filtered);\n  };\n\n  if (loading) {\n    return <Spinner />;\n  }\n\n  return (\n    <section className=\"container\">\n      <h1 className=\"large text-primary\">Jobs</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-briefcase\"></i> Browse and find a job\n      </p>\n      <JobSearchFilter onFilter={onFilter} />\n      <div className=\"jobs\">\n        {filteredJobs.map(job => (\n          <JobItem key={job._id} job={job} />\n        ))}\n      </div>\n    </section>\n  );\n};\n\nJobList.propTypes = {\n  getJobs: PropTypes.func.isRequired,\n  job: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  job: state.job\n});\n\nexport default connect(mapStateToProps, { getJobs })(JobList);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}