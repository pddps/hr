{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_JOBS, GET_JOB, ADD_JOB, DELETE_JOB, JOB_ERROR, GET_EMPLOYER_JOBS // Ensure this is imported\n} from './types';\n\n// Get all jobs\nexport const getJobs = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/jobs');\n    dispatch({\n      type: GET_JOBS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: JOB_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Get a single job by ID\nexport const getJob = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/jobs/${id}`);\n    dispatch({\n      type: GET_JOB,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: JOB_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Add a new job\nexport const addJob = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/jobs', formData, config);\n    dispatch({\n      type: ADD_JOB,\n      payload: res.data\n    });\n    dispatch(setAlert('Job Created', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: JOB_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Delete a job by ID\nexport const deleteJob = id => async dispatch => {\n  try {\n    await axios.delete(`/api/jobs/${id}`);\n    dispatch({\n      type: DELETE_JOB,\n      payload: id\n    });\n    dispatch(setAlert('Job Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: JOB_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Get employer jobs\nexport const getEmployerJobs = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/employer/jobs'); // Adjust the endpoint as necessary\n    dispatch({\n      type: GET_EMPLOYER_JOBS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: JOB_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"names":["axios","setAlert","GET_JOBS","GET_JOB","ADD_JOB","DELETE_JOB","JOB_ERROR","GET_EMPLOYER_JOBS","getJobs","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getJob","id","addJob","formData","history","config","headers","post","push","errors","forEach","error","deleteJob","delete","getEmployerJobs"],"sources":["C:/Users/DEEPESH/Downloads/vendohr-main/vendohr-main/client/src/actions/job.js"],"sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  GET_JOBS,\n  GET_JOB,\n  ADD_JOB,\n  DELETE_JOB,\n  JOB_ERROR,\n  GET_EMPLOYER_JOBS // Ensure this is imported\n} from './types';\n\n// Get all jobs\nexport const getJobs = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/jobs');\n    dispatch({\n      type: GET_JOBS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: JOB_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Get a single job by ID\nexport const getJob = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/jobs/${id}`);\n    dispatch({\n      type: GET_JOB,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: JOB_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Add a new job\nexport const addJob = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    const res = await axios.post('/api/jobs', formData, config);\n    dispatch({\n      type: ADD_JOB,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Job Created', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: JOB_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Delete a job by ID\nexport const deleteJob = id => async dispatch => {\n  try {\n    await axios.delete(`/api/jobs/${id}`);\n    dispatch({\n      type: DELETE_JOB,\n      payload: id\n    });\n\n    dispatch(setAlert('Job Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: JOB_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Get employer jobs\nexport const getEmployerJobs = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/employer/jobs'); // Adjust the endpoint as necessary\n    dispatch({\n      type: GET_EMPLOYER_JOBS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: JOB_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}